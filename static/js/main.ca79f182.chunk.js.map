{"version":3,"sources":["components/Container/Container.js","redux/types.js","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/PhonebookItem/PhonebookItem.js","components/PhonebookList/PhonebookList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["Container","children","className","styles","container","addContact","createAction","types","data","payload","id","uuidv4","name","number","deleteItem","changeFilter","connect","dispatch","onFormSubmit","contactAction","useState","setName","setNumber","contactId","useRef","inputValue","e","target","value","formReset","inputContainer","form","onSubmit","preventDefault","formItem","type","pattern","title","required","onChange","button","state","contacts","filter","onChangeFilter","filterAction","currentTarget","inputFilter","PhoneListItem","onDeleteList","list","onClick","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","items","map","App","createReducer","action","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAYeA,EARG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,8BCJ7B,EAGA,qBAHA,EAMA,iBANA,EAOE,gBCWF,GAAEI,WAfEC,YAAaC,GAAmB,SAACC,GAClD,MAAO,CACLC,QAAS,CACPC,GAAIC,cACJC,KAAMJ,EAAKI,KACXC,OAAQL,EAAKK,YAUUC,WALVR,YAAaC,GAKSQ,aAHpBT,YAAaC,I,gBC4DlC,IAIeS,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,aAAc,SAACV,GAAD,OAAUS,EAASE,EAAcd,WAAWG,QAG7CQ,EAxEf,YAAkC,IAAjBE,EAAgB,EAAhBA,aACf,EAAwBE,mBAAS,IAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOP,EAAP,KAAeS,EAAf,KACMC,EAAYC,iBAAOb,eAEnBc,EAAa,SAACC,GAClB,MAAwBA,EAAEC,OAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACd,OAAQhB,GACN,IAAK,OACHS,EAAQO,GACR,MAEF,IAAK,SACHN,EAAUM,GACV,MAEF,QACE,SAWAC,EAAY,WAChBR,EAAQ,IACRC,EAAU,KAGZ,OACE,qBAAKpB,UAAWC,IAAO2B,eAAvB,SACE,uBAAM5B,UAAWC,IAAO4B,KAAMC,SAdf,SAACN,GAClBA,EAAEO,iBAEFf,EAAa,CAAEN,KAAMA,EAAMC,OAAQA,EAAQU,UAAWA,IACtDM,KAUE,UACE,wBAAO3B,UAAWC,IAAO+B,SAAzB,iBACO,IACL,uBACEC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRV,MAAOhB,EACP2B,SAAUd,OAGd,wBAAOvB,UAAWC,IAAO+B,SAAzB,mBACS,IACP,uBACEC,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRV,MAAOf,EACP0B,SAAUd,OAGd,wBAAQU,KAAK,SAASjC,UAAWC,IAAOqC,OAAxC,iC,iBCtCOxB,eATS,SAACyB,GAAD,MAAY,CAClCb,MAAOa,EAAMC,SAASC,WAGG,SAAC1B,GAAD,MAAe,CACxC2B,eAAgB,SAAClB,GAAD,OACdT,EAAS4B,EAAa9B,aAAaW,EAAEoB,cAAclB,YAGxCZ,EAxBA,SAAC,GAA+B,IAA7BY,EAA4B,EAA5BA,MAAOgB,EAAqB,EAArBA,eACvB,OACE,wBAAO1C,UAAWC,IAAOwC,OAAzB,UACE,mBAAGzC,UAAWC,IAAOkC,MAArB,oCAEA,uBACEnC,UAAWC,IAAO4C,YAClBZ,KAAK,OACLP,MAAOA,EACPW,SAAUK,U,iBCOHI,EAlBO,SAAC,GAAwC,IAAtCtC,EAAqC,EAArCA,GAAIE,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,OAAQoC,EAAmB,EAAnBA,aACzC,OACE,qBAAI/C,UAAWC,IAAO+C,KAAtB,UACE,8BAAItC,EAAJ,OACA,4BAAIC,IACJ,wBAAQX,UAAWC,IAAOqC,OAAQW,QAAS,kBAAMF,EAAavC,IAA9D,sBAH+BA,ICuCtBM,eAbS,SAACyB,GACvB,MAA0BA,EAAMC,SAAxBC,EAAR,EAAQA,OAGR,MAAO,CACLD,SAbuB,SAACA,EAAUC,GACpC,IAAMS,EAAmBT,EAAOU,cAEhC,OAAOX,EAASC,QAAO,SAACW,GAAD,OACrBA,EAAQ1C,KAAKyC,cAAcE,SAASH,MAMdI,CADxB,EAAgBC,MACkCd,OAOzB,SAAC1B,GAAD,MAAe,CACxCgC,aAAc,SAACvC,GAAD,OAAQO,EAASH,EAAWA,WAAWJ,QAGxCM,EAvCO,SAAC,GAAuC,IAArC0B,EAAoC,EAApCA,SAAUL,EAA0B,EAA1BA,MAAOY,EAAmB,EAAnBA,aACxC,OACE,gCACE,6BAAKZ,IACL,6BACGK,EAASgB,KAAI,gBAAGhD,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEED,KAAMA,EACNC,OAAQA,EACRoC,aAAc,kBAAMA,EAAavC,KAH5BA,cCGFiD,MAXf,WACE,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAetB,MAAM,iB,+BCPrBoB,EAAQG,YAAc,GAAI,CAC9B,qBAAsB,SAACnB,EAAOoB,GAAR,4BAAuBpB,GAAvB,CAA8BoB,EAAOpD,WAC3D,iBAAkB,SAACgC,EAAOoB,GAAR,OAChBpB,EAAME,QAAO,SAACW,GAAD,OAAaA,EAAQ5C,KAAOmD,EAAOpD,cAarCqD,cAAgB,CAC7BL,QACAd,OAZa,WAAoC,IAAnCF,EAAkC,uDAA1B,GAA0B,yCAApBN,EAAoB,EAApBA,KAAM1B,EAAc,EAAdA,QAClC,OAAQ0B,GACN,KAAK5B,EACH,OAAOE,EAET,QACE,OAAOgC,MCVPsB,EAAU,sBAAOC,eAAP,CAA+BC,MAUhCC,EARDC,YAAe,CAC3BC,QAAS,CACP1B,SAAU2B,GAEZN,aACAO,UAAUC,ICNZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJS,SAASC,eAAe,U","file":"static/js/main.ca79f182.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  ADD_NAME: \"inputForm/Name\",\n  ADD_NUMBER: \"inputForm/Number\",\n  ADD_CONTACT: \"contact/addContact\",\n  FORM_RESET: \"inputForm/Reset\",\n  FORM_SUBMIT: \"inputForm/Submit\",\n  DELETE_ITEM: \"contact/delete\",\n  CHANGE_FILTER: \"filter/change\",\n  GET_VISIBLE_CONTACTS: \"contactList/getContacts\",\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport types from \"./types\";\n\nconst addContact = createAction(types.ADD_CONTACT, (data) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    },\n  };\n});\n\nconst deleteItem = createAction(types.DELETE_ITEM);\n\nconst changeFilter = createAction(types.CHANGE_FILTER);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteItem, changeFilter };\n","// import React, { Component } from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction Input({ onFormSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contactId = useRef(uuidv4());\n\n  const inputValue = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n\n    onFormSubmit({ name: name, number: number, contactId: contactId });\n    formReset();\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <div className={styles.inputContainer}>\n      <form className={styles.form} onSubmit={addContact}>\n        <label className={styles.formItem}>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={inputValue}\n          />\n        </label>\n        <label className={styles.formItem}>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={inputValue}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFormSubmit: (data) => dispatch(contactAction.addContact(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Input);\n\nInput.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport filterAction from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={styles.filter}>\n      <p className={styles.title}>Find contacts by name </p>\n\n      <input\n        className={styles.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangeFilter: (e) =>\n    dispatch(filterAction.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./PhonebookItem.module.css\";\n\nconst PhoneListItem = ({ id, name, number, onDeleteList }) => {\n  return (\n    <li className={styles.list} key={id}>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <button className={styles.button} onClick={() => onDeleteList(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhoneListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n\nexport default PhoneListItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport deleteItem from \"../../redux/actions\";\nimport PhoneBookItem from \"../PhonebookItem/PhonebookItem\";\nimport PropTypes from \"prop-types\";\n\nconst PhonebookList = ({ contacts, title, onDeleteList }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <PhoneBookItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteList={() => onDeleteList(id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteList: (id) => dispatch(deleteItem.deleteItem(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n","import Container from \"./components/Container/Container\";\nimport Input from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport PhonebookList from \"./components/PhonebookList/PhonebookList\";\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Input />\n      <Filter />\n      <PhonebookList title=\"Contacts\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport types from \"./types\";\n\nconst items = createReducer([], {\n  \"contact/addContact\": (state, action) => [...state, action.payload],\n  \"contact/delete\": (state, action) =>\n    state.filter((contact) => contact.id !== action.payload),\n});\n\nconst filter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","// import { combineReducers } from \"redux\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from \"./reducer\";\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}